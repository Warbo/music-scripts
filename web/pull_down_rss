#! /usr/bin/env nix-shell
#! nix-shell -p libxslt xmlstarlet -i bash

# Grabs RSS feeds and dumps them in ~/.cache
# Used to work around things imm doesn't support (e.g. HTTPS)

function stripNonAscii {
    tr -cd '[:print:]\n'
}

function fixRss {
    # Set the author to $1, to avoid newlines
    xmlstarlet ed -u "//author" -v "$1" |

    # Append today as the pubDate, then remove all but the first pubDate (i.e.
    # append today as the pubDate, if none is given)
    xmlstarlet ed -s //item -t elem -n pubDate             \
                  -v "$(date -d "today 00:00" --rfc-2822)" \
                  -d '//item/author[position() != 1]'
}

function atomToRss {
    xsltproc ~/System/Programs/atom2rss-exslt.xsl "$1.atom" |
        fixRss "$1" > "$1.rss"
}

function get {
    timeout 20 wget --no-check-certificate "$@"
}

function getAtom {
    get -O - "$2" | stripNonAscii > "$1.atom"
    atomToRss "$1"
}

function getYouTube {
    get -O - "http://www.youtube.com/feeds/videos.xml?channel_id=$2" |
        stripNonAscii > "$1.atom"
    atomToRss "$1"
}

function getRss {
    get -O - "$2" | stripNonAscii | fixRss "$1" > "$1.rss"
}

function getCourier {
    # Edit URL http://feed43.com/feed.html?name=dundee_courier
    COURIER="$HOME/.cache/rss/DundeeCourier.rss"
    if [[ -e "$COURIER" ]]
    then
        # Feed43 don't like polling more than every 6 hours
        if test "$(find "$COURIER" -mmin +360)"
        then
            getRss "DundeeCourier" "http://feed43.com/dundee_courier.xml"
        fi
    else
        getRss "DundeeCourier" "http://feed43.com/dundee_courier.xml"
    fi
}

mkdir -p ~/.cache/rss
cd ~/.cache/rss || {
    echo "Couldn't cd to ~/.cache/rss" 1>&2
    exit 1
}

# Raw RSS feeds

getRss "XKCD"                               "http://xkcd.com/rss.xml"
getRss "TypeTheory"                         "http://typetheorypodcast.com/feed/podcast"
getRss "MathFactor"                         "http://mathfactor.uark.edu/feed/"
getRss "PlanetHaskell"                      "http://planet.haskell.org/rss20.xml"
getRss "SMBC"                               "http://www.smbc-comics.com/rss.php"
getRss "TalkingMachines"                    "http://www.thetalkingmachines.com/blog/?format=RSS"
getRss "TEDTalks"                           "https://www.ted.com/talks/rss"
getRss "LifeScientific"                     "http://www.bbc.co.uk/programmes/b015sqc7/episodes/downloads.rss"
getRss "LambdaTheUltimate"                  "http://lambda-the-ultimate.org/rss.xml"
getRss "LinearDigressions"                  "http://feeds.feedburner.com/udacity-linear-digressions"
getRss "MIRI"                               "http://feeds.feedburner.com/miriblog"
getRss "MoreOrLess"                         "http://www.bbc.co.uk/programmes/p02nrss1/episodes/downloads.rss"
getRss "HiddenHistoriesOfTheInformationAge" "http://www.bbc.co.uk/programmes/b04mttrp/episodes/downloads.rss"
getRss "BornSmart,Equal,Different"          "http://www.bbc.co.uk/programmes/b042q944/episodes/downloads.rss"
getRss "FlyingColoursMaths"                 "http://www.flyingcoloursmaths.co.uk/feed/"
getRss "ComputingBritain"                   "http://www.bbc.co.uk/programmes/b06bq6j1/episodes/downloads.rss"
getRss "ConorMcBride"                       "https://pigworker.wordpress.com/feed/"
getRss "HackerNews"                         "http://feeds.feedburner.com/fullhackernews"
getRss "Programmer Paintings"               "http://classicprogrammerpaintings.com/rss"

# Raw ATOM feeds

getAtom "XKCDWhatIf"           "http://what-if.xkcd.com/feed.atom"
getAtom "PerryBibleFellowship" "http://pbfcomics.com/feed/feed.xml"
getAtom "kurzweilai"           "http://www.kurzweilai.net/feed/atom"

# YouTube channels

getYouTube standupmaths   "UCSju5G2aFaWMqn-_0YBtq5A"
getYouTube numberphile    "UCoxcjq-8xIDTYp3uz647V5A"
getYouTube computerphile  "UC9-y-6csu5WGm29I7JiwpnA"
getYouTube vsauce         "UC6nSFpj9HTCZ5t-N3Rm3-HA"
getYouTube veritasium     "UCHnyfMqiRRG1u-2MsSQLbXA"
getYouTube periodicvideos "UCtESv1e7ntJaLJYKIO1FoYw"
getYouTube sixtysymbols   "UCvBqzzvUBLCs8Y7Axb-jZew"

# Scrape BBC iPlayer

iplayer_to_rss

# Scrape the Dundee Courier

getCourier
