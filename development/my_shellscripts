#!/usr/bin/env bash

# List as many shell scripts as possible, which are in my control to edit

function keep {
    keepScripts
}

function isSh {
    [[ "x$(ext "$1")" = "xsh" ]]
}

function hasShebang {
    grep '^#!' < "$1" > /dev/null
}

function isBinary {
    grep "^#!" < "$1" | grep "^Binary file" > /dev/null
}

function hasLowercase {
    # Skip LICENSE, README, etc.
    basename "$1" | grep -- "[a-z]" > /dev/null
}

function isHidden {
    [[ "x$(basename "$1" | cut -c 1)" = "x." ]]
}

function nonShellInterpreter {
    # Skip non-bash interpreters
    CONTENT=$(grep "^#!" < "$1")
    for NOPE in python haskell make
    do
        # /usr/bin/env lines
        echo "$CONTENT" | grep -- "/usr/bin.*$NOPE" > /dev/null && return 0
        # nix-shell interpreters
        echo "$CONTENT" | grep -- "-i $NOPE"        > /dev/null && return 0
    done
    return 1
}

function isFile {
    [[ -f "$1" ]]
}

function scriptFile {
    file "$1" | grep "shell script, ASCII text executable" > /dev/null
}

function keep {
    isFile              "$1" || return 1
    isSh                "$1" && return 0
    scriptFile          "$1" && return 0
    hasShebang          "$1" || return 1
    isBinary            "$1" && return 1
    hasLowercase        "$1" || return 1
    isHidden            "$1" && return 1
    nonShellInterpreter "$1" && return 1
    return 0
}

function skipExt {
    grep -v "\.${1}$"
}

function skip {
    grep -v '/\.git'           |
        grep -v '/\.svn'           |
        grep -v 'Tests/results/'   |
        grep -v 'Programming/ATS/' |
        grep -v '/test-data/'      |
        grep -v '/mc-aixi-ctw/'    |
        grep -v '/CIL'             |
        skipExt nix    |
        skipExt agda.* |
        skipExt hs     |
        skipExt png    |
        skipExt html   |
        skipExt c      |
        skipExt o      |
        skipExt h      |
        skipExt cpp    |
        skipExt py.*   |
        skipExt deb    |
        skipExt gz     |
        skipExt txt    |
        skipExt v.*    |
        skipExt lhs    |
        skipExt rb     |
        skipExt pl     |
        skipExt conf
}

function ext {
    echo "$1" | rev | cut -d '.' -f 1 | rev | tr '[:upper:]' '[:lower:]'
}

function getAll {
    for D in System/Tests System/Programs/bin blog warbo-utilities Programming Writing
    do
        locate "$HOME/$D/*" | skip | while read -r "$LINE"
        do
            ABS=$(readlink -f "$LINE")
            keep "$ABS" && echo "$ABS"
        done
    done
}

getAll | uniq
