#!/usr/bin/env python
"""Takes a SimpleTest class name and optionally a method name, gives out a URL
for the start of that test's HTML output. Useful to pipe into a browser."""

import os
import sys
import HTMLParser
from   lxml import etree

# Check our argument
if len(sys.argv) < 2:
    print "Usage: 'find_test MyClass' or 'find_test MyClass::myMethod'"
    sys.exit()

test = sys.argv[1]
if '::' in test:
    (class_, method) = test.split('::')
else:
    class_ = test
    method = None

# Look up HTML output for this class
d     = '/home/chris/codebase/storedev/sites/default/files/simpletest/verbose'
files = sorted([f for f in os.listdir(d) if f.startswith(class_ + '-')])

# We can't output anything when we have no URL
if len(files) == 0:
    print 'about:blank'
    sys.exit()

# If we have no method, just get the first page
if method is None:
    print 'file://' + d + '/' + files[0]
    sys.exit()

# We need to find where the method starts. Our tests should run via
# WandiscoBaseTestCase::testRun, which handily outputs a div with the ID
# "wandisco-testrun-methodName".
xpath = '//div[@id="wandisco-testrun-' + method + '"]'
beacons = []
for f in files:
    with open(d + '/' + f, 'r') as h:
        html = etree.HTML(h.read())
        if len(html.xpath(xpath)) > 0:
            beacons.append(f)

if len(beacons) == 0:
    print 'file://' + d + '/' + files[0]
else:
    print 'file://' + d + '/' + beacons[0]
