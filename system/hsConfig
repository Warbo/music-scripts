#! /usr/bin/env nix-shell
#! nix-shell -i bash -p bash cabal2nix

function genDefault {
    DEF=$(cabal2nix ./.) || {
        echo "Error: $DEF" >> /dev/stderr
        exit 1
    }
    echo "$DEF"
}

function genShell {
    SHELL=$(cabal2nix --shell ./.) || {
        echo "Shell error: $SHELL" >> /dev/stderr
        exit 1
    }
    echo "$SHELL"
}

function writeFile {
    # Only write to existing files; dump any old content to stdout first
    if [[ -e "$1" ]]
    then
        echo "START $1"
        cat "$1"
        echo "END $1"
        echo "Generating $1"
        cat > "$1"
    fi
}

function haveTests {
    tr '[:upper:]' '[:lower:]' < *.cabal | grep "^\s*test-suite" > /dev/null
}

# Update any existing files
genDefault | writeFile "default.nix"
genShell   | writeFile "shell.nix"

# Coverage can cause instability, so only use it when opted in
if [[ -n "$COVERAGE" ]]
then
    COVERAGEOPT="--enable-coverage"
else
    COVERAGEOPT=""
fi

if haveTests
then
    CMD="cabal configure --enable-tests $COVERAGEOPT --enable-benchmarks -v"
else
    CMD="cabal configure --enable-benchmarks -v"
fi

echo "Configuring package"
if [[ -e "shell.nix" ]]
then
    nix-shell --run "$CMD"
else
    nix-shell -E "$(cabal2nix --shell ./.)" --run "$CMD"
fi
