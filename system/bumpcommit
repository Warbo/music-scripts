#!/usr/bin/env bash

set -e

TEDIR="/home/chris/System/Packages/haskell-te"

function getHead {
  git rev-parse --short HEAD
}

function anySha {
  date | sha256sum | cut -d ' ' -f 1
}

function lineNum {
    grep -n "$1" | cut -d ':' -f 1
}

function firstAfter {
    while read LINE
    do
        if [[ "$LINE" -gt "$1" ]]
        then
            echo "$LINE"
            return
        fi
    done
}

function replaceSetting {
    echo "\"$3\"" > "$TOALTER/$1.$2.nix"
}

function tryTest {
    if [[ "x$1" == "xhaskell-te" ]]
    then
        nix-shell -p HS2AST --run "true" 2>& 1
    elif [[ "x$1" == "xwarbo-utilities-src" ]]
    then
        nix-shell -p warbo-utilities --run "true" 2>& 1
    else
        (cd "$TEDIR"; ./one.sh "$1" 2>& 1)
    fi
}

function trySha {
    SHASUM=$(tryTest "$1" |
                    grep  ", instead has "      |
                    grep -o "instead has .*"    |
                    grep -o         "has .*"    |
                    grep -o            " [^ ]*" |
                    grep -o              "[0-9a-zA-Z]*")
    if [[ -n "$SHASUM" ]]
    then
        echo "$SHASUM"
    else
        echo "Failed to get SHA of $1" > /dev/stderr
        exit 1
    fi
}

function bump {
    git push --all
    replaceSetting "$1" "rev"    $(getHead)
    replaceSetting "$1" "sha256" $(anySha)
    replaceSetting "$1" "sha256" $(trySha "$1")
}

function bumpInTE {
    TOALTER="/home/chris/System/Packages/haskell-te"
    bump "$1"
}

function bumpInCfg {
    if git status | grep "modified:[ ]*.*\.nix" > /dev/null
    then
        git add *.nix
        git commit -m "Bumping versions"
    fi

    TOALTER=$(readlink -f "/home/chris/.nixpkgs/local")
    bump "$1"
}

case "$PWD" in
    "/home/chris/Programming/Haskell/MLSpec")
        bumpInTE "mlspec"
        ;;

    "/home/chris/Programming/Haskell/ML4HS")
        bumpInTE "ml4hs"
        ;;

    "/home/chris/Programming/Haskell/TreeFeatures")
        bumpInTE "treefeatures"
        ;;

    "/home/chris/Programming/Haskell/ArbitraryHaskell")
        bumpInTE "ArbitraryHaskell"
        ;;

    "/home/chris/Programming/Haskell/AstPlugin")
        bumpInTE "AstPlugin"
        ;;

    "/home/chris/Programming/Haskell/HS2AST")
        bumpInTE "HS2AST"
        ;;

    "/home/chris/Programming/Haskell/ML4HSHelper")
        bumpInTE "ML4HSHelper"
        ;;

    "/home/chris/System/Packages/haskell-te")
        bumpInCfg "haskell-te"
        ;;

    "/home/chris/warbo-utilities")
        bumpInCfg "warbo-utilities-src"
        ;;

    *)
        echo "Couldn't determine project in $PWD"
        exit 1
        ;;
esac
